# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on: [push]
permissions:
  contents: read

jobs:
  deploy:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pydub pygetwindow mutagen pyaudio
    - name: Build Exe
      run: |
        pyinstaller main.spec
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Spify
        path: dist/main.exe
    - name: Release File
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.head_commit.message }}
        release_name: ${{ github.event.head_commit.message }}
        body: |
          Release v1.0.0 
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets. GITHUB_TOKEN }}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: dist/main.exe
        asset_name: Spify_Windows_x64.exe
        asset_content_type: application/zip
        
